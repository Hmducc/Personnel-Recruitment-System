{"version":3,"sources":["createPresenceComponent.ts"],"sourcesContent":["import { useEventCallback, useFirstMount, useIsomorphicLayoutEffect, useMergedRefs } from '@fluentui/react-utilities';\nimport type { EventData, EventHandler } from '@fluentui/react-utilities';\nimport * as React from 'react';\n\nimport { PresenceGroupChildContext } from '../contexts/PresenceGroupChildContext';\nimport { useIsReducedMotion } from '../hooks/useIsReducedMotion';\nimport { useMotionImperativeRef } from '../hooks/useMotionImperativeRef';\nimport { useMountedState } from '../hooks/useMountedState';\nimport { animate } from '../utils/animate';\nimport { getChildElement } from '../utils/getChildElement';\nimport type { PresenceMotion, MotionImperativeRef, PresenceMotionFn } from '../types';\n\ntype PresenceMotionEventData = EventData<'animation', AnimationPlaybackEvent> & {\n  direction: 'enter' | 'exit';\n};\n\nexport type PresenceComponentProps = {\n  /**\n   * By default, the child component won't execute the \"enter\" motion when it initially mounts, regardless of the value\n   * of \"visible\". If you desire this behavior, ensure both \"appear\" and \"visible\" are set to \"true\".\n   */\n  appear?: boolean;\n\n  /** A React element that will be cloned and will have motion effects applied to it. */\n  children: React.ReactElement;\n\n  /** Provides imperative controls for the animation. */\n  imperativeRef?: React.Ref<MotionImperativeRef | undefined>;\n\n  onMotionFinish?: EventHandler<PresenceMotionEventData>;\n\n  /** Defines whether a component is visible; triggers the \"enter\" or \"exit\" motions. */\n  visible?: boolean;\n\n  /**\n   * By default, the child component remains mounted after it reaches the \"finished\" state. Set \"unmountOnExit\" if\n   * you prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit?: boolean;\n};\n\nfunction shouldSkipAnimation(appear: boolean | undefined, isFirstMount: boolean, visible: boolean | undefined) {\n  return !appear && isFirstMount && visible;\n}\n\nexport function createPresenceComponent(motion: PresenceMotion | PresenceMotionFn) {\n  const Presence: React.FC<PresenceComponentProps> = props => {\n    const itemContext = React.useContext(PresenceGroupChildContext);\n    const { appear, children, imperativeRef, onMotionFinish, visible, unmountOnExit } = { ...itemContext, ...props };\n\n    const [mounted, setMounted] = useMountedState(visible, unmountOnExit);\n    const child = getChildElement(children);\n\n    const animationRef = useMotionImperativeRef(imperativeRef);\n    const elementRef = React.useRef<HTMLElement>();\n    const ref = useMergedRefs(elementRef, child.ref);\n    const optionsRef = React.useRef<{ appear?: boolean }>({});\n\n    const isFirstMount = useFirstMount();\n    const isReducedMotion = useIsReducedMotion();\n\n    const onEnterFinish = useEventCallback((event: AnimationPlaybackEvent) => {\n      onMotionFinish?.(event, { event, type: 'animation', direction: 'enter' });\n    });\n    const onExitFinish = useEventCallback((event: AnimationPlaybackEvent) => {\n      onMotionFinish?.(event, { event, type: 'animation', direction: 'exit' });\n\n      if (unmountOnExit) {\n        setMounted(false);\n        itemContext?.onExit();\n      }\n    });\n\n    useIsomorphicLayoutEffect(() => {\n      optionsRef.current = { appear };\n    });\n\n    useIsomorphicLayoutEffect(\n      () => {\n        if (!elementRef.current || shouldSkipAnimation(optionsRef.current.appear, isFirstMount, visible)) {\n          return;\n        }\n\n        const presenceDefinition = typeof motion === 'function' ? motion(elementRef.current) : motion;\n        const { keyframes, ...options } = visible ? presenceDefinition.enter : presenceDefinition.exit;\n\n        const animation = animate(elementRef.current, keyframes, {\n          fill: 'forwards',\n\n          ...options,\n          ...(isReducedMotion() && { duration: 1 }),\n        });\n\n        if (!animation) {\n          return;\n        }\n\n        if (!visible && isFirstMount) {\n          // Heads up!\n          // .finish() is used there to skip animation on first mount, but apply animation styles immediately\n          animation.finish();\n          return;\n        }\n\n        animationRef.current = animation;\n        animation.onfinish = visible ? onEnterFinish : onExitFinish;\n\n        return () => {\n          animation.cancel();\n        };\n      },\n      // Excluding `isFirstMount` from deps to prevent re-triggering the animation on subsequent renders\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [animationRef, isReducedMotion, onEnterFinish, onExitFinish, visible],\n    );\n\n    if (mounted) {\n      return React.cloneElement(child, { ref });\n    }\n\n    return null;\n  };\n\n  return Presence;\n}\n"],"names":["useEventCallback","useFirstMount","useIsomorphicLayoutEffect","useMergedRefs","React","PresenceGroupChildContext","useIsReducedMotion","useMotionImperativeRef","useMountedState","animate","getChildElement","shouldSkipAnimation","appear","isFirstMount","visible","createPresenceComponent","motion","Presence","props","itemContext","useContext","children","imperativeRef","onMotionFinish","unmountOnExit","mounted","setMounted","child","animationRef","elementRef","useRef","ref","optionsRef","isReducedMotion","onEnterFinish","event","type","direction","onExitFinish","onExit","current","presenceDefinition","keyframes","options","enter","exit","animation","fill","duration","finish","onfinish","cancel","cloneElement"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,aAAa,EAAEC,yBAAyB,EAAEC,aAAa,QAAQ,4BAA4B;AAEtH,YAAYC,WAAW,QAAQ;AAE/B,SAASC,yBAAyB,QAAQ,wCAAwC;AAClF,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,sBAAsB,QAAQ,kCAAkC;AACzE,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,eAAe,QAAQ,2BAA2B;AAgC3D,SAASC,oBAAoBC,MAA2B,EAAEC,YAAqB,EAAEC,OAA4B;IAC3G,OAAO,CAACF,UAAUC,gBAAgBC;AACpC;AAEA,OAAO,SAASC,wBAAwBC,MAAyC;IAC/E,MAAMC,WAA6CC,CAAAA;QACjD,MAAMC,cAAcf,MAAMgB,UAAU,CAACf;QACrC,MAAM,EAAEO,MAAM,EAAES,QAAQ,EAAEC,aAAa,EAAEC,cAAc,EAAET,OAAO,EAAEU,aAAa,EAAE,GAAG;YAAE,GAAGL,WAAW;YAAE,GAAGD,KAAK;QAAC;QAE/G,MAAM,CAACO,SAASC,WAAW,GAAGlB,gBAAgBM,SAASU;QACvD,MAAMG,QAAQjB,gBAAgBW;QAE9B,MAAMO,eAAerB,uBAAuBe;QAC5C,MAAMO,aAAazB,MAAM0B,MAAM;QAC/B,MAAMC,MAAM5B,cAAc0B,YAAYF,MAAMI,GAAG;QAC/C,MAAMC,aAAa5B,MAAM0B,MAAM,CAAuB,CAAC;QAEvD,MAAMjB,eAAeZ;QACrB,MAAMgC,kBAAkB3B;QAExB,MAAM4B,gBAAgBlC,iBAAiB,CAACmC;YACtCZ,2BAAAA,qCAAAA,eAAiBY,OAAO;gBAAEA;gBAAOC,MAAM;gBAAaC,WAAW;YAAQ;QACzE;QACA,MAAMC,eAAetC,iBAAiB,CAACmC;YACrCZ,2BAAAA,qCAAAA,eAAiBY,OAAO;gBAAEA;gBAAOC,MAAM;gBAAaC,WAAW;YAAO;YAEtE,IAAIb,eAAe;gBACjBE,WAAW;gBACXP,wBAAAA,kCAAAA,YAAaoB,MAAM;YACrB;QACF;QAEArC,0BAA0B;YACxB8B,WAAWQ,OAAO,GAAG;gBAAE5B;YAAO;QAChC;QAEAV,0BACE;YACE,IAAI,CAAC2B,WAAWW,OAAO,IAAI7B,oBAAoBqB,WAAWQ,OAAO,CAAC5B,MAAM,EAAEC,cAAcC,UAAU;gBAChG;YACF;YAEA,MAAM2B,qBAAqB,OAAOzB,WAAW,aAAaA,OAAOa,WAAWW,OAAO,IAAIxB;YACvF,MAAM,EAAE0B,SAAS,EAAE,GAAGC,SAAS,GAAG7B,UAAU2B,mBAAmBG,KAAK,GAAGH,mBAAmBI,IAAI;YAE9F,MAAMC,YAAYrC,QAAQoB,WAAWW,OAAO,EAAEE,WAAW;gBACvDK,MAAM;gBAEN,GAAGJ,OAAO;gBACV,GAAIV,qBAAqB;oBAAEe,UAAU;gBAAE,CAAC;YAC1C;YAEA,IAAI,CAACF,WAAW;gBACd;YACF;YAEA,IAAI,CAAChC,WAAWD,cAAc;gBAC5B,YAAY;gBACZ,mGAAmG;gBACnGiC,UAAUG,MAAM;gBAChB;YACF;YAEArB,aAAaY,OAAO,GAAGM;YACvBA,UAAUI,QAAQ,GAAGpC,UAAUoB,gBAAgBI;YAE/C,OAAO;gBACLQ,UAAUK,MAAM;YAClB;QACF,GACA,kGAAkG;QAClG,uDAAuD;QACvD;YAACvB;YAAcK;YAAiBC;YAAeI;YAAcxB;SAAQ;QAGvE,IAAIW,SAAS;YACX,OAAOrB,MAAMgD,YAAY,CAACzB,OAAO;gBAAEI;YAAI;QACzC;QAEA,OAAO;IACT;IAEA,OAAOd;AACT"}