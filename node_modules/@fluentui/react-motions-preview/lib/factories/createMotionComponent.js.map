{"version":3,"sources":["createMotionComponent.ts"],"sourcesContent":["import { useIsomorphicLayoutEffect, useMergedRefs } from '@fluentui/react-utilities';\nimport * as React from 'react';\n\nimport { useIsReducedMotion } from '../hooks/useIsReducedMotion';\nimport { useMotionImperativeRef } from '../hooks/useMotionImperativeRef';\nimport { animate } from '../utils/animate';\nimport { getChildElement } from '../utils/getChildElement';\nimport type { AtomMotion, AtomMotionFn, MotionImperativeRef } from '../types';\n\ntype MotionComponentProps = {\n  children: React.ReactElement;\n\n  /** Provides imperative controls for the animation. */\n  imperativeRef?: React.Ref<MotionImperativeRef | undefined>;\n\n  iterations?: number;\n};\n\n/**\n * Creates a component that will animate the children using the provided motion.\n *\n * @param motion - A motion definition.\n */\nexport function createMotionComponent(motion: AtomMotion | AtomMotionFn) {\n  const Atom: React.FC<MotionComponentProps> = props => {\n    const { children, iterations = 1, imperativeRef } = props;\n\n    const child = getChildElement(children);\n\n    const animationRef = useMotionImperativeRef(imperativeRef);\n    const elementRef = React.useRef<HTMLElement>();\n\n    const isReducedMotion = useIsReducedMotion();\n\n    useIsomorphicLayoutEffect(() => {\n      const element = elementRef.current;\n\n      if (element) {\n        const definition = typeof motion === 'function' ? motion(element) : motion;\n        const { keyframes, ...options } = definition;\n\n        const animation = animate(element, keyframes, {\n          fill: 'forwards',\n\n          ...options,\n          iterations,\n\n          ...(isReducedMotion() && { duration: 1 }),\n        });\n\n        if (!animation) {\n          return;\n        }\n\n        animationRef.current = animation;\n\n        return () => {\n          animation.cancel();\n        };\n      }\n    }, [animationRef, iterations, isReducedMotion]);\n\n    return React.cloneElement(children, { ref: useMergedRefs(elementRef, child.ref) });\n  };\n\n  return Atom;\n}\n"],"names":["useIsomorphicLayoutEffect","useMergedRefs","React","useIsReducedMotion","useMotionImperativeRef","animate","getChildElement","createMotionComponent","motion","Atom","props","children","iterations","imperativeRef","child","animationRef","elementRef","useRef","isReducedMotion","element","current","definition","keyframes","options","animation","fill","duration","cancel","cloneElement","ref"],"mappings":"AAAA,SAASA,yBAAyB,EAAEC,aAAa,QAAQ,4BAA4B;AACrF,YAAYC,WAAW,QAAQ;AAE/B,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,sBAAsB,QAAQ,kCAAkC;AACzE,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,eAAe,QAAQ,2BAA2B;AAY3D;;;;CAIC,GACD,OAAO,SAASC,sBAAsBC,MAAiC;IACrE,MAAMC,OAAuCC,CAAAA;QAC3C,MAAM,EAAEC,QAAQ,EAAEC,aAAa,CAAC,EAAEC,aAAa,EAAE,GAAGH;QAEpD,MAAMI,QAAQR,gBAAgBK;QAE9B,MAAMI,eAAeX,uBAAuBS;QAC5C,MAAMG,aAAad,MAAMe,MAAM;QAE/B,MAAMC,kBAAkBf;QAExBH,0BAA0B;YACxB,MAAMmB,UAAUH,WAAWI,OAAO;YAElC,IAAID,SAAS;gBACX,MAAME,aAAa,OAAOb,WAAW,aAAaA,OAAOW,WAAWX;gBACpE,MAAM,EAAEc,SAAS,EAAE,GAAGC,SAAS,GAAGF;gBAElC,MAAMG,YAAYnB,QAAQc,SAASG,WAAW;oBAC5CG,MAAM;oBAEN,GAAGF,OAAO;oBACVX;oBAEA,GAAIM,qBAAqB;wBAAEQ,UAAU;oBAAE,CAAC;gBAC1C;gBAEA,IAAI,CAACF,WAAW;oBACd;gBACF;gBAEAT,aAAaK,OAAO,GAAGI;gBAEvB,OAAO;oBACLA,UAAUG,MAAM;gBAClB;YACF;QACF,GAAG;YAACZ;YAAcH;YAAYM;SAAgB;QAE9C,OAAOhB,MAAM0B,YAAY,CAACjB,UAAU;YAAEkB,KAAK5B,cAAce,YAAYF,MAAMe,GAAG;QAAE;IAClF;IAEA,OAAOpB;AACT"}